name: CI
on:
  push:
    branches:
      - main

jobs:

  ghpage:
    if: github.repository == 'jaywcjlove/free-font'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    outputs:
      release_successful: ${{ steps.create_release.outputs.successful }}
      changelog_version: ${{ steps.changelog.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      - name: Create Tag
        id: create_tag
        uses: jaywcjlove/create-tag-action@main
        with:
          package-path: ./package.json
      - name: Generate Changelog
        id: changelog
        uses: jaywcjlove/changelog-generator@main
        with:
          filter-author: (小弟调调™|\@github-actions-bot\@renovate-bot|dependabot|renovate\\[bot\\]|dependabot\\[bot\\]|Renovate Bot)
          filter: (^[\s]+?[R|r]elease)|(^[R|r]elease)
          gh-pages: main
      - name: Create Release
        id: create_release
        uses: jaywcjlove/create-tag-action@main
        if: steps.create_tag.outputs.successful == 'true'
        with:
          package-path: ./package.json
          version: ${{steps.create_tag.outputs.version}}
          release: true
          prerelease: false
          draft: false
          body: |
            [![Buy me a coffee](https://img.shields.io/badge/Buy%20me%20a%20coffee-048754?logo=buymeacoffee)](https://jaywcjlove.github.io/#/sponsor)  
            备用历史网站: ${{ steps.changelog.outputs.tag }}: https://raw.githack.com/jaywcjlove/free-font/${{ steps.changelog.outputs.gh-pages-short-hash }}/docs/index.html  
            比较变化: ${{ steps.changelog.outputs.compareurl }}  
            > [!NOTE]
            > 
            > GitHub [Page](https://jaywcjlove.github.io/free-font/) ，镜像网站访问：[`Githack`](https://raw.githack.com/jaywcjlove/free-font/main/docs/index.html)、[`Vercel`](https://free-font.vercel.app)、[`Netlify`](https://freefont.netlify.app)

            ${{ steps.changelog.outputs.changelog }}

            ## Docker

            ```shell
            docker pull wcjiang/free-font:latest
            ```

            ```shell
            docker run --name reference --rm -d -p 9677:3000 wcjiang/free-font:latest
            # Or
            docker run --name reference -itd -p 9677:3000 wcjiang/free-font:latest
            ```

  build:
    if: github.repository == 'jaywcjlove/free-font' && needs.ghpage.outputs.release_successful == 'true'
    needs: ghpage
    runs-on: ubuntu-latest
    timeout-minutes: 480  # 8 hours timeout
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      - name: Check Disk Space After Cleanup
        run: |
          echo "=== After Initial Cleanup ==="
          df -h
          echo "=== Memory Usage ==="
          free -h
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Check Disk Space Before npm install
        run: |
          echo "=== Before npm install ==="
          df -h
      - run: npm install
      - name: Check Disk Space After npm install
        run: |
          echo "=== After npm install ==="
          df -h
      - run: npm run build:docker
      - name: Check Disk Space After build
        run: |
          echo "=== After build ==="
          df -h
      - name: Additional Cleanup Before Docker
        run: |
          echo "=== Before Additional Cleanup ==="
          df -h
          
          # Clean npm cache and node modules
          npm cache clean --force || true
          sudo rm -rf ~/.npm ~/.node-gyp ~/.cache/node-gyp ~/.nvm
          sudo rm -rf /usr/local/lib/node_modules
          sudo rm -rf node_modules/.cache
          
          # Clean system packages and cache
          sudo apt-get clean
          sudo apt-get autoremove -y
          sudo rm -rf /var/lib/apt/lists/*
          sudo rm -rf /tmp/*
          sudo rm -rf /var/tmp/*
          
          # Clean additional directories
          sudo rm -rf /usr/local/lib/android /opt/ghc /usr/share/dotnet /usr/share/swift /usr/local/.ghcup
          sudo rm -rf /usr/share/miniconda /usr/local/share/boost /usr/local/graalvm
          sudo rm -rf /usr/local/share/powershell /usr/share/swift
          
          # Clean logs
          sudo rm -rf /var/log/* || true
          
          echo "=== After Additional Cleanup ==="
          df -h
      - uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            network=host
            image=moby/buildkit:master
          buildkitd-config-inline: |
            [worker.oci]
              max-parallelism = 1
              gc = true
              gckeepstorage = "2GB"
              gcpolicy = [{keep-duration = "24h"}, {filters = ["type==source.local"], all = true, keepBytes = 1073741824}]
            [registry."docker.io"]
              mirrors = ["mirror.gcr.io"]
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Clean Docker system
        run: |
          echo "=== Before Docker cleanup ==="
          df -h
          docker system prune -af --volumes
          docker buildx prune -af
          echo "=== After Docker cleanup ==="
          df -h
      - name: Build and push image:latest
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          platforms: linux/amd64,linux/arm64
          tags: wcjiang/free-font:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=registry
          provenance: false
          sbom: false
      - name: Clean Between Docker Builds
        run: |
          echo "=== Cleaning between Docker builds ==="
          docker system prune -f
          echo "=== Disk space after cleanup ==="
          df -h
      - name: Build and push image:tags
        uses: docker/build-push-action@v5
        if: needs.ghpage.outputs.release_successful == 'true'
        with:
          push: true
          context: .
          platforms: linux/amd64,linux/arm64
          tags: wcjiang/free-font:${{needs.ghpage.outputs.changelog_version}}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=registry
          provenance: false
          sbom: false
